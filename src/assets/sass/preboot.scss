// _preboot.scss
// Variables and mixins

// Variables
// --------------------------------------------------

//Descriptive colors
$white:				#ffffff;
$black:				#000000;

//Functional colors
$a:					$white;
$b:					$black;

//Fonts
$sans:        		Soleil, 'Helvetica Neue', Helvetica, Arial, sans-serif;
$mono: 				"Lucida Sans Typewriter", "Lucida Console", Monaco, monospace;

//Break points
$one:				600px;
$two:				800px;
$three:				1100px;

//Grid
$width:				900px;
$col:				81px;
$gut:				36px;

//Baseline
$base: 				25px;

//Element
$indent:			1.5em;
$rule: 				1px solid $a;

// Mixins
// --------------------------------------------------

@mixin no-select {
	-webkit-user-select: none;
	   -moz-user-select: none;
	   	-ms-user-select: none;
	   		user-select: none;
}

@mixin border-radius($radius: 2px) {
	-webkit-border-radius: $radius;
		 -moz-border-radius: $radius;
			  border-radius: $radius;
}

@mixin transform-element($deg: 90deg) {
    -webkit-transform: rotate($deg);
        -ms-transform: rotate($deg);
            transform: rotate($deg);
}

@mixin box-size($val: border-box) {
	-webkit-box-sizing: $val;
	   -moz-box-sizing: $val;
	        box-sizing: $val;
}

@mixin small-type {
	@include for(small-screens) {
        @include rem('font-size', 13px);
	}
	@include rem('font-size', 16px);
}

@mixin for($media) {
	@if $media == small-screens {
		@media screen and (min-width: $one) { @content; }
	}
	@else if $media == medium-screens {
		@media screen and (min-width: $two) { @content; }
	}
	@else if $media == large-screens {
		@media screen and (min-width: $three) { @content; }
	}
}

$baseline-px: 16px;

@mixin rem($property, $px-values) {
	// Convert the baseline into rems
	$baseline-rem: $baseline-px / 1rem;
	// Print the first line in pixel values
	#{$property}: $px-values;
	// If there is only one (numeric) value, return the property/value line for it.
	@if type-of($px-values) == "number" {
		#{$property}: $px-values / $baseline-rem; }
	@else {
		// Create an empty list that we can dump values into
		$rem-values: unquote("");
		@each $value in $px-values {
			// If the value is zero, return 0
			@if $value == 0 {
				$rem-values: append($rem-values, $value); }
			@else {
				$rem-values: append($rem-values, $value / $baseline-rem); } }
		// Return the property and its list of converted values
		#{$property}: $rem-values; } }

/*---------------------------------------------------------
 Extends (_preboot.scss)
-------------------------------------------------------- */
.clear {
	zoom: 1;
	&:before,
	&:after {
		display: table;
		content: "";
	}
	&:after {
		clear: both;
	}
}
.break {
	word-break: break-word;
	word-wrap: break-word;
}